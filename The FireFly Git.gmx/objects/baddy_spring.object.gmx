<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>baddy_yellow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hspeed = 1;
yforce = 0;
xforce = 0;
hspeed_max = 6;
vspeed_max = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//yy = y - mouse_y;
//xx = mouse_x - x;

yy = y - buggy_obj.y;
xx = buggy_obj.x - x;
//global.fruit = "xx: " + string(xx) + "yy: " + string(yy);
/*
dist = sqrt( (xx * xx) + (yy * yy) );
dist = distance_to_point(mouse_x,mouse_y);
k = .005; // sprint constant 
// spring equation F = -kX 
direction = radtodeg( arctan2( y - mouse_y, mouse_x - x) );
distance_to_point(mouse_x,mouse_y);
force = 1 * k * dist;
speed += force;
*/
xdist = xx;
ydist = yy;
//global.fruit = xdist;
k = .005;
fric = 10;



yforce = (-1 * k * ydist);
xforce = (1 * k * xdist);

vspeed += yforce;
hspeed += xforce;
/*
if (vspeed &lt; vspeed_max )vspeed += yforce;
else vspeed = vspeed_max;
if (hspeed &lt; hspeed_max) hspeed += xforce;
else hspeed = hspeed_max;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
